(ns isartest.main
  (:require ["package:flutter/material.dart" :as m]
            [cljd.flutter :as f]
            ["package:isar/isar.dart" :as isar]
            ["package:path_provider/path_provider.dart" :as path-provider]
            ["models/user.dart" :as user]))

(defonce db-instance (atom nil))

(defn init-db []
  (let [dir (await (path-provider/getApplicationDocumentsDirectory))]
    (reset! db-instance (await (isar/Isar.open
                                [user/UserSchema]
                                :directory (.-path dir))))))

(defn insert-dummy-user []
  (let [^isar/Isar db @db-instance
        new-user (user/User)]
    (set! (.-name new-user) "John Doe")
    (set! (.-age new-user) 30)
    (await (.writeTxn db (fn [] (await (.put (.-users ^isar/Isar db) new-user)))))
           (println "Dummy user inserted successfully!")))

(defn main []
  (m/WidgetsFlutterBinding.ensureInitialized)
  (init-db)
  (fn [_]
    (f/run
      (m/MaterialApp
       .title "Welcome to Flutter"
       .theme (m/ThemeData .primarySwatch m.Colors/pink)
       .home
       (m/Scaffold
        .appBar (m/AppBar
                 .title (m/Text "Welcome to ClojureDart"))
        .body
        (m/Center
         .child
         (m/Column
          .mainAxisAlignment m.MainAxisAlignment/center
          .children
          [(m/Text "Let's get coding!"
                   .style (m/TextStyle
                           .fontSize 32.0))
           (m/SizedBox .height 20)
           (m/ElevatedButton
            .onPressed (fn []
                         (insert-dummy-user)
                         (println "Button pressed! Inserting dummy user..."))
            .child (m/Text "Insert Dummy User"))])))))))
