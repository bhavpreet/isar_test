(ns isartest.main
  (:require ["package:flutter/material.dart" :as m]
            [cljd.flutter :as f]
            ["package:isar/isar.dart" :as isar]
            ["package:path_provider/path_provider.dart" :as path-provider]
            ["models/user.dart" :as user]))

(defonce db-instance (atom nil))

(defn init-db []
  (-> (path-provider/getApplicationDocumentsDirectory)
      (.then (fn [dir]
               (isar/Isar.open
                 [user/User]
                 .directory (.-path dir))))
      (.then (fn [db]
               (reset! db-instance db)))))

(defn insert-dummy-user []
  (when-let [db @db-instance]
    (let [new-user (user/User)]
      (set! (.-name new-user) "John Doe")
      (set! (.-age new-user) 30)
      (-> (.writeTxn db (fn [] (.put (.-users db) new-user)))
          (.then (fn [_] (println "Dummy user inserted successfully!")))))))

(defn main []
  (m/WidgetsFlutterBinding.ensureInitialized)
  (-> (init-db)
      (.then (fn [_]
               (f/run
                 (m/MaterialApp
      .title "Welcome to Flutter"
      .theme (m/ThemeData .primarySwatch m.Colors/pink)
      .home
      (m/Scaffold
        .appBar (m/AppBar
                  .title (m/Text "Welcome to ClojureDart"))
        .body
        (m/Center
          .child
          (m/Column
            .mainAxisAlignment m.MainAxisAlignment/center
            .children
            [(m/Text "Let's get coding!"
               .style (m/TextStyle
                        .fontSize 32.0))
             (m/SizedBox .height 20)
             (m/ElevatedButton
               .onPressed (fn []
                            (insert-dummy-user)
                            (println "Button pressed! Inserting dummy user..."))
               .child (m/Text "Insert Dummy User"))]))))))
